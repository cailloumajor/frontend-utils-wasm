name: Automated release and publish

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
    steps:
      - id: release-please
        uses: googleapis/release-please-action@v4
        with:
          # Token permissions: read access to metadata, read and write access to
          # actions, code and pull requests.
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

  publish:
    name: Build and publish package
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created
    permissions:
      contents: read
      id-token: write # The OIDC ID token is used for authentication with JSR.
    steps:
      - uses: actions/checkout@v5
      - name: Get Rust version from dev container Dockerfile
        id: get-rust-version
        run: |
          echo "RUST_VERSION=$(grep -oP 'FROM rust:\K[\d.]+' .devcontainer/Dockerfile)" \
          >> $GITHUB_OUTPUT
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ steps.get-rust-version.outputs.RUST_VERSION }}
      - name: Get Deno version from dev container Dockerfile
        id: get-deno-version
        run: |
          echo "DENO_VERSION=$(grep -oP 'FROM denoland/deno:bin-\K[\d.]+' .devcontainer/Dockerfile)" \
          >> $GITHUB_OUTPUT
      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ steps.get-deno-version.outputs.DENO_VERSION }}
          cache: true
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: deno task build
      - name: Publish the package
        run: npx jsr publish
